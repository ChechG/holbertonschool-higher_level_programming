The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------
Importing function:
        >>> say_my_name = __import__('3-say_my_name').say_my_name

Case with two strigns as arguments:
        >>> say_my_name("John", "Smith")
        My name is John Smith

Case with one string as argument:
        >>> say_my_name("John")
        My name is John 

Case with two empty strings as arguments:
        >>> say_my_name("", "")
        My name is  

Case with one empty string:
        >>> say_my_name("")
        My name is  

Case with no arguments:
        >>> say_my_name()
        Traceback (most recent call last):
        ...
        TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Case with None as argument:
        >>> say_my_name(None)
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Case with int as argument:
        >>> say_my_name(12)
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Case with int as first argument:
        >>> say_my_name(12, "White")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Case with int as second argument:
        >>> say_my_name("Walter", 12)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string

Case with two ints as arguments:
        >>> say_my_name(12, 12)
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Case with one int and an empty string as arguments:
        >>> say_my_name(12, "")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Case with empty string and int as arguments:
        >>> say_my_name("", 12)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string
